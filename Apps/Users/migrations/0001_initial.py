# Generated by Django 3.1.2 on 2020-11-02 07:07

import Apps.Users.models
import Apps.Users.validators
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alumno',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expediente', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(111111)])),
            ],
            options={
                'verbose_name': 'Alumno',
                'verbose_name_plural': 'Alumnos',
            },
        ),
        migrations.CreateModel(
            name='Autor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', code='Nombre no válido', message='El nombre debe ser alfanumerico')])),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]+$', code='Nombre no válido', message='El nombre debe ser alfanumerico')])),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
            },
        ),
        migrations.CreateModel(
            name='Ciudad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Ciudad',
                'verbose_name_plural': 'Ciudades',
            },
        ),
        migrations.CreateModel(
            name='Contrato',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Tipos de Contrato',
            },
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=254, unique=True)),
            ],
            options={
                'verbose_name': 'Editorial',
                'verbose_name_plural': 'Editoriales',
            },
        ),
        migrations.CreateModel(
            name='Facultad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=70, unique=True)),
            ],
            options={
                'verbose_name': 'Facultad',
                'verbose_name_plural': 'Facultades',
            },
        ),
        migrations.CreateModel(
            name='Institucion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name': 'Institución',
                'verbose_name_plural': 'Instituciones',
            },
        ),
        migrations.CreateModel(
            name='LineaInvestigacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Lineas de Investigación',
            },
        ),
        migrations.CreateModel(
            name='Nivel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=254, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Niveles de Clases Impartidas',
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'País',
                'verbose_name_plural': 'Países',
            },
        ),
        migrations.CreateModel(
            name='PalabrasClave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Palabra clave',
                'verbose_name_plural': ' Palabras clave',
            },
        ),
        migrations.CreateModel(
            name='Revista',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=254, unique=True)),
            ],
            options={
                'verbose_name': 'Revista',
                'verbose_name_plural': 'Revistas',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('clave', models.PositiveIntegerField(null=True, unique=True, validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(1)], verbose_name='Clave de empleado')),
                ('sexo', models.CharField(choices=[('H', 'Hombre'), ('M', 'Mujer')], max_length=1, null=True, verbose_name='Genero')),
                ('nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=Apps.Users.models.image_user)),
                ('grado', models.CharField(choices=[('L', 'Licenciatura'), ('M', 'Maestría'), ('D', 'Doctorado')], max_length=1, null=True, verbose_name='Último grado de estudios')),
                ('cuerpoAcademico', models.CharField(max_length=18, null=True, verbose_name='Cuerpo Académico')),
                ('publico', models.BooleanField(default=False)),
                ('contratacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.contrato', verbose_name='Tipo de contrato')),
                ('facultades', models.ManyToManyField(to='Users.Facultad', verbose_name='Facultades donde imparte clases')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('investigaciones', models.ManyToManyField(to='Users.LineaInvestigacion', verbose_name='Lineas de investigación o áreas de interes')),
                ('niveles', models.ManyToManyField(to='Users.Nivel', verbose_name='Niveles donde imparte clases')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Usuarios',
                'ordering': ['id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UpdateRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('P', 'Pendiente'), ('A', 'Aprobado'), ('R', 'Rechazado')], max_length=1, null=True)),
                ('fecha', models.DateTimeField(auto_now=True, verbose_name='Fecha')),
                ('motivo', models.CharField(blank=True, max_length=1000, null=True)),
                ('first_name', models.CharField(max_length=150, null=True)),
                ('last_name', models.CharField(max_length=150, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('clave', models.PositiveIntegerField(null=True, validators=[django.core.validators.MaxValueValidator(999999), django.core.validators.MinValueValidator(1)], verbose_name='Clave de empleado')),
                ('sexo', models.CharField(choices=[('H', 'Hombre'), ('M', 'Mujer')], max_length=1, null=True, verbose_name='Genero')),
                ('nacimiento', models.DateField(null=True, verbose_name='Fecha de nacimiento')),
                ('foto', models.ImageField(blank=True, null=True, upload_to=Apps.Users.models.temp_image_user)),
                ('grado', models.CharField(choices=[('L', 'Licenciatura'), ('M', 'Maestría'), ('D', 'Doctorado')], max_length=1, null=True, verbose_name='Último grado de estudios')),
                ('cuerpoAcademico', models.CharField(max_length=18, null=True, verbose_name='Cuerpo Académico')),
                ('publico', models.BooleanField(null=True)),
                ('changed_fields', models.JSONField(blank=True, null=True)),
                ('contratacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.contrato', verbose_name='Tipo de contrato')),
                ('facultades', models.ManyToManyField(blank=True, to='Users.Facultad', verbose_name='Facultades donde imparte clases')),
                ('investigaciones', models.ManyToManyField(blank=True, to='Users.LineaInvestigacion', verbose_name='Lineas de investigación o áreas de interes')),
                ('niveles', models.ManyToManyField(blank=True, to='Users.Nivel', verbose_name='Niveles donde imparte clases')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha'],
            },
        ),
        migrations.CreateModel(
            name='Tesis',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300)),
                ('grado', models.CharField(choices=[('L', 'Licenciatura'), ('M', 'Maestría'), ('D', 'Doctorado')], max_length=1)),
                ('inicio', models.DateField()),
                ('fin', models.DateField()),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.alumno')),
                ('institucion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.institucion')),
                ('lineas_investigacion', models.ManyToManyField(to='Users.LineaInvestigacion')),
                ('palabras_clave', models.ManyToManyField(to='Users.PalabrasClave')),
                ('profesor', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tesis',
                'verbose_name_plural': 'Tesis',
            },
        ),
        migrations.CreateModel(
            name='Patente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300)),
                ('descripcion', models.CharField(max_length=350)),
                ('uso', models.CharField(max_length=255)),
                ('registro', models.CharField(max_length=25)),
                ('publicacion', models.DateField()),
                ('comprobante', models.FileField(upload_to=Apps.Users.models.comprobantes, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['PDF']), Apps.Users.validators.validate_file_size])),
                ('proposito', models.CharField(choices=[('AT', 'Asimilación tecnológica'), ('CT', 'Creación de desarrollo tecnológico'), ('DI', 'Difusión'), ('GC', 'Generación de conocimiento'), ('IA', 'Investigación aplicada'), ('TT', 'Transferencia de tecnología')], max_length=2)),
                ('autores', models.ManyToManyField(to='Users.Autor')),
                ('lineas_investigacion', models.ManyToManyField(to='Users.LineaInvestigacion')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.pais')),
            ],
            options={
                'verbose_name': 'Patente',
                'verbose_name_plural': 'Patentes',
            },
        ),
        migrations.CreateModel(
            name='Investigacion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_proyecto', models.CharField(choices=[('I', 'Investigación'), ('V', 'Vinculación')], max_length=1)),
                ('titulo', models.CharField(max_length=300)),
                ('financiamiento', models.BooleanField()),
                ('tipo_financiamiento', models.CharField(blank=True, choices=[('I', 'Interno'), ('E', 'Externo')], max_length=1, null=True)),
                ('inicio', models.DateField()),
                ('fin', models.DateField()),
                ('resumen', models.FileField(upload_to=Apps.Users.models.resumenes, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['PDF'])])),
                ('institucion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.institucion')),
                ('lineas_investigacion', models.ManyToManyField(to='Users.LineaInvestigacion')),
                ('palabras_clave', models.ManyToManyField(to='Users.PalabrasClave')),
                ('primer_alumno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primer_alumno_investigacion', to='Users.alumno')),
                ('primer_colaborador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primer_colaborador_investigacion', to='Users.autor')),
                ('responsable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsable_investigacion', to='Users.autor')),
                ('segundo_alumno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segundo_alumno_investigacion', to='Users.alumno')),
                ('segundo_colaborador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segundo_colaborador_investigacion', to='Users.autor')),
                ('tercer_alumno', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tercer_alumno_investigacion', to='Users.alumno')),
            ],
            options={
                'verbose_name': 'Investigación',
                'verbose_name_plural': 'Investigaciones',
            },
        ),
        migrations.CreateModel(
            name='Estado',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=30)),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.pais')),
            ],
            options={
                'verbose_name': 'Estado',
                'verbose_name_plural': 'Estados',
            },
        ),
        migrations.CreateModel(
            name='Congreso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=300)),
                ('congreso', models.CharField(max_length=300)),
                ('estado', models.CharField(choices=[('P', 'Publicado'), ('A', 'Aceptado')], max_length=1)),
                ('publicacion', models.DateField(blank=True, null=True)),
                ('presentacion', models.DateField()),
                ('proposito', models.CharField(choices=[('AT', 'Asimilación tecnológica'), ('CT', 'Creación de desarrollo tecnológico'), ('DI', 'Difusión'), ('GC', 'Generación de conocimiento'), ('IA', 'Investigación aplicada'), ('TT', 'Transferencia de tecnología')], max_length=2)),
                ('ciudad', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.ciudad')),
                ('estadoP', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Users.estado')),
                ('lineas_investigacion', models.ManyToManyField(to='Users.LineaInvestigacion')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.pais')),
                ('palabras_clave', models.ManyToManyField(to='Users.PalabrasClave')),
                ('primer_autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primer_autor_congreso', to='Users.autor')),
                ('primer_colaborador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primer_colaborador_congreso', to='Users.autor')),
                ('segundo_colaborador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segundo_colaborador_congreso', to='Users.autor')),
            ],
            options={
                'verbose_name': 'Congreso',
                'verbose_name_plural': 'Congresos',
            },
        ),
        migrations.AddField(
            model_name='ciudad',
            name='estado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.estado'),
        ),
        migrations.CreateModel(
            name='CapituloLibro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('L', 'Libro'), ('C', 'Capitulo')], max_length=1)),
                ('titulo', models.CharField(max_length=150)),
                ('pagina_inicio', models.PositiveIntegerField(blank=True, null=True)),
                ('pagina_fin', models.PositiveIntegerField(blank=True, null=True)),
                ('estado', models.CharField(choices=[('P', 'Publicado'), ('A', 'Aceptado')], max_length=1)),
                ('edicion', models.PositiveIntegerField()),
                ('tiraje', models.PositiveIntegerField()),
                ('isbn', models.CharField(max_length=15)),
                ('publicacion', models.DateField(blank=True, null=True)),
                ('proposito', models.CharField(choices=[('AT', 'Asimilación tecnológica'), ('CT', 'Creación de desarrollo tecnológico'), ('DI', 'Difusión'), ('GC', 'Generación de conocimiento'), ('IA', 'Investigación aplicada'), ('TT', 'Transferencia de tecnología')], max_length=3)),
                ('editorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.editorial')),
                ('lineas_investigacion', models.ManyToManyField(to='Users.LineaInvestigacion')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.pais')),
                ('palabras_clave', models.ManyToManyField(to='Users.PalabrasClave')),
                ('primer_autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primer_autor_capitulo', to='Users.autor')),
                ('primer_coautor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primer_coautor_libro', to='Users.autor')),
                ('segundo_coautor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segundo_coautor_libro', to='Users.autor')),
            ],
            options={
                'verbose_name': 'Libro/Capítulo',
                'verbose_name_plural': 'Libros/Capítulo',
            },
        ),
        migrations.AddField(
            model_name='autor',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.CharField(choices=[('ARB', 'Arbitrado'), ('IND', 'Indizado'), ('JCR', 'Indizado JCR'), ('SCP', 'SCOPUS')], max_length=3)),
                ('titulo', models.CharField(max_length=300)),
                ('descripcion', models.CharField(max_length=350)),
                ('estado', models.CharField(choices=[('P', 'Publicado'), ('A', 'Aceptado')], max_length=1)),
                ('isnn', models.BigIntegerField()),
                ('publicacion', models.DateField(blank=True, null=True)),
                ('url', models.URLField(max_length=300)),
                ('pagina_inicio', models.PositiveIntegerField()),
                ('pagina_fin', models.PositiveIntegerField()),
                ('volumen', models.PositiveIntegerField(blank=True, null=True)),
                ('doi', models.URLField(max_length=100)),
                ('indice_revista', models.PositiveIntegerField(blank=True, null=True)),
                ('editorial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.editorial')),
                ('lineas_investigacion', models.ManyToManyField(to='Users.LineaInvestigacion')),
                ('pais', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.pais')),
                ('palabras_clave', models.ManyToManyField(to='Users.PalabrasClave')),
                ('primer_autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='primer_autor_articulo', to='Users.autor')),
                ('primer_colaborador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='primer_colaborador_articulo', to='Users.autor')),
                ('revista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.revista')),
                ('segundo_colaborador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='segundo_colaborador_articulo', to='Users.autor')),
            ],
            options={
                'verbose_name': 'Artículo',
                'verbose_name_plural': 'Artículos',
            },
        ),
    ]
